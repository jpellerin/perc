// Generated by CoffeeScript 1.6.3
(function() {
  var JSONCov, addCoverage, coverageClass, dlog, exports, fs, makeReporter, path, util;

  dlog = require('debug')('perc:coverage');

  fs = require('fs');

  path = require('path');

  JSONCov = require('mocha/lib/reporters/json-cov');

  util = require('./util');

  makeReporter = function(basereporter, coverageFile) {
    var Reporter;
    Reporter = require("mocha/lib/reporters/" + basereporter);
    return addCoverage(Reporter, coverageFile);
  };

  addCoverage = function(reporter, filename) {
    return function(runner) {
      var jade, mdir, self, template, tmpl,
        _this = this;
      self = new reporter(runner);
      jade = require('jade');
      mdir = util.find('mocha');
      template = "" + mdir + "/lib/reporters/templates/coverage.jade";
      tmpl = jade.compile(fs.readFileSync(template, 'utf8'), {
        filename: template
      });
      JSONCov.call(self, runner, false);
      return runner.on('end', function() {
        var output;
        output = tmpl({
          cov: self.cov,
          coverageClass: coverageClass
        });
        fs.writeFileSync(filename, output);
        return console.log("HTML coverage report written to " + filename);
      });
    };
  };

  coverageClass = function(n) {
    if (n >= 75) {
      return 'high';
    } else if (n >= 50) {
      return 'medium';
    } else if (n >= 25) {
      return 'low';
    } else {
      return 'terrible';
    }
  };

  exports = module.exports = makeReporter;

}).call(this);
